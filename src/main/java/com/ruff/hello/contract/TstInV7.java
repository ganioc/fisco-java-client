package com.ruff.hello.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple5;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple9;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class TstInV7 extends Contract {
    public static final String[] BINARY_ARRAY = {"","","000000000000000000028152600401611a5d906162e6565b602060405180830381600087803b158015611a7757600080fd5b505af1158015611a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611aaf9190810190615822565b6142fb565b8360076009850201815181101515611ac857fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b289061653d565b600060405180830381600087803b158015611b4257600080fd5b505af1158015611b56573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611b7f919081019061597e565b8360086009850201815181101515611b9357fe5b906020019060200201819052508180600101925050611322565b8c8c868598509850985098505050505050945094509450949050565b60606000806000606060008060006060600080611c8060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c755780601f10611c4a57610100808354040283529160200191611c75565b820191906000526020600020905b815481529060010190602001808311611c5857829003601f168201915b50505050508d612ce5565b915060008273ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ce857600080fd5b505af1158015611cfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d209190810190615822565b1415611d94576000806000806000806020604051908101604052806000815250959493929190859550849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a5061242d565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611dea9190616140565b602060405180830381600087803b158015611e0457600080fd5b505af1158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e3c91908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e9190616592565b600060405180830381600087803b158015611eab57600080fd5b505af1158015611ebf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611ee8919081019061597e565b8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f3b9061661c565b602060405180830381600087803b158015611f5557600080fd5b505af1158015611f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f8d9190810190615822565b8273ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fe0906164ef565b602060405180830381600087803b158015611ffa57600080fd5b505af115801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120329190810190615822565b8373ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120859061644c565b602060405180830381600087803b15801561209f57600080fd5b505af11580156120b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120d79190810190615822565b8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161212a9061649a565b600060405180830381600087803b15801561214457600080fd5b505af1158015612158573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612181919081019061597e565b8573ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121d490616382565b602060405180830381600087803b1580156121ee57600080fd5b505af1158015612202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122269190810190615822565b8673ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161227990616334565b602060405180830381600087803b15801561229357600080fd5b505af11580156122a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122cb9190810190615822565b8773ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161231e906162e6565b602060405180830381600087803b15801561233857600080fd5b505af115801561234c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123709190810190615822565b8873ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123c39061653d565b600060405180830381600087803b1580156123dd57600080fd5b505af11580156123f1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061241a919081019061597e565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b6060600080600060606000806000606060008061252960038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124e85780601f106124bd576101008083540402835291602001916124e8565b820191906000526020600020905b8154815290600101906020018083116124cb57829003601f168201915b50505050506040805190810160405280600881526020017f706c6174655f69640000000000000000000000000000000000000000000000008152508e614546565b915060008273ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561259157600080fd5b505af11580156125a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125c99190810190615822565b141561263d576000806000806000806020604051908101604052806000815250959493929190859550849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a50612cd6565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126939190616140565b602060405180830381600087803b1580156126ad57600080fd5b505af11580156126c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126e591908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161273a90616592565b600060405180830381600087803b15801561275457600080fd5b505af1158015612768573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612791919081019061597e565b8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127e49061661c565b602060405180830381600087803b1580156127fe57600080fd5b505af1158015612812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128369190810190615822565b8273ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612889906164ef565b602060405180830381600087803b1580156128a357600080fd5b505af11580156128b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128db9190810190615822565b8373ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161292e9061644c565b602060405180830381600087803b15801561294857600080fd5b505af115801561295c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129809190810190615822565b8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129d39061649a565b600060405180830381600087803b1580156129ed57600080fd5b505af1158015612a01573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612a2a919081019061597e565b8573ffffffffffffffffffffffffffffffffffffffff1663fda69f","","","01602060405180830381600087803b158015614a6057600080fd5b505af1158015614a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614a989190810190615822565b821015615287578473ffffffffffffffffffffffffffffffffffffffff1663846719e0836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614af49190615ff0565b602060405180830381600087803b158015614b0e57600080fd5b505af1158015614b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614b4691908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614b9b90616592565b600060405180830381600087803b158015614bb557600080fd5b505af1158015614bc9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614bf2919081019061597e565b8360098402815181101515614c0357fe5b90602001906020020181905250614cbd8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614c669061661c565b602060405180830381600087803b158015614c8057600080fd5b505af1158015614c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614cb89190810190615822565b6142fb565b8360016009850201815181101515614cd157fe5b90602001906020020181905250614d8b8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614d34906164ef565b602060405180830381600087803b158015614d4e57600080fd5b505af1158015614d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614d869190810190615822565b6142fb565b8360026009850201815181101515614d9f57fe5b90602001906020020181905250614e598173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614e029061644c565b602060405180830381600087803b158015614e1c57600080fd5b505af1158015614e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614e549190810190615822565b6142fb565b8360036009850201815181101515614e6d57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614ecd9061649a565b600060405180830381600087803b158015614ee757600080fd5b505af1158015614efb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614f24919081019061597e565b8360046009850201815181101515614f3857fe5b90602001906020020181905250614ff28173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614f9b90616382565b602060405180830381600087803b158015614fb557600080fd5b505af1158015614fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614fed9190810190615822565b6142fb565b836005600985020181518110151561500657fe5b906020019060200201819052506150c08173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161506990616334565b602060405180830381600087803b15801561508357600080fd5b505af1158015615097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506150bb9190810190615822565b6142fb565b83600660098502018151811015156150d457fe5b9060200190602002018190525061518e8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615137906162e6565b602060405180830381600087803b15801561515157600080fd5b505af1158015615165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506151899190810190615822565b6142fb565b83600760098502018151811015156151a257fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016152029061653d565b600060405180830381600087803b15801561521c57600080fd5b505af1158015615230573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250615259919081019061597e565b836008600985020181518110151561526d57fe5b9060200190602002018190525081806001019250506149fc565b829350505050919050565b6000611001905090565b6000806000806152ab8c614731565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561531157600080fd5b505af1158015615325573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615349919081019061577e565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18c8c6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016153a292919061627f565b600060405180830381600087803b1580156153bc57600080fd5b505af11580156153d0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166342f8dd318a8a6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161542b9291906161ad565b600060405180830381600087803b15801561544557600080fd5b505af1158015615459573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663c31c9b658a896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016154b49291906161ad565b600060405180830381600087803b1580156154ce57600080fd5b505af11580156154e2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16637ec1cc6587876040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161553d9291906160cb565b600060405180830381600087803b15801561555757600080fd5b505af115801561556b573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e398d846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016155c692919061617d565b602060405180830381600087803b1580156155e057600080fd5b505af11580156155f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061561891908101906157a7565b905080935050505098975050505050505050565b604080519081016040528060008152602001606081525090565b60006156528251616775565b905092915050565b60006156668251616787565b905092915050565b600061567a8251616799565b905092915050565b600061568e82516167ab565b905092915050565b60006156a282356167bd565b905092915050565b60006156b682516167bd565b905092915050565b600082601f83011215156156d157600080fd5b81356156e46156df826166b2565b616685565b9150808252602083016020830185838301111561570057600080fd5b61570b838284616819565b50505092915050565b600082601f830112151561572757600080fd5b815161573a615735826166b2565b616685565b9150808252602083016020830185838301111561575657600080fd5b615761838284616828565b50505092915050565b600061577682356167c7565b905092915050565b60006020828403121561579057600080fd5b600061579e84828501615646565b91505092915050565b6000602082840312156157b957600080fd5b60006157c78482850161565a565b91505092915050565b6000602082840312156157e257600080fd5b60006157f08482850161566e565b91505092915050565b60006020828403121561580b57600080fd5b600061581984828501615682565b91505092915050565b60006020828403121561583457600080fd5b6000615842848285016156aa565b91505092915050565b6000806000806080858703121561586157600080fd5b600061586f87828801615696565b945050602061588087828801615696565b935050604061589187828801615696565b92505060606158a287828801615696565b91505092959194509250565b600080600080600060a086880312156158c657600080fd5b60006158d488828901615696565b95505060206158e588828901615696565b94505060406158f688828901615696565b935050606061590788828901615696565b925050608086013567ffffffffffffffff81111561592457600080fd5b615930888289016156be565b9150509295509295909350565b60006020828403121561594f57600080fd5b600082013567ffffffffffffffff81111561596957600080fd5b615975848285016156be565b91505092915050565b60006020828403121561599057600080fd5b600082015167ffffffffffffffff8111156159aa57600080fd5b6159b684828501615714565b91505092915050565b6000806000606084860312156159d457600080fd5b600084013567ffffffffffffffff8111156159ee57600080fd5b6159fa868287016156be565b9350506020615a0b86828701615696565b9250506040615a1c86828701615696565b9150509250925092565b60008060008060008060008060006101208a8c031215615a4557600080fd5b","60008a013567ffffffffffffffff811115615a5f57600080fd5b615a6b8c828d016156be565b9950506020615a7c8c828d01615696565b9850506040615a8d8c828d01615696565b9750506060615a9e8c828d01615696565b96505060808a013567ffffffffffffffff811115615abb57600080fd5b615ac78c828d016156be565b95505060a0615ad88c828d01615696565b94505060c0615ae98c828d01615696565b93505060e0615afa8c828d01615696565b9250506101008a013567ffffffffffffffff811115615b1857600080fd5b615b248c828d016156be565b9150509295985092959850929598565b600060208284031215615b4657600080fd5b6000615b548482850161576a565b91505092915050565b615b668161672b565b82525050565b6000615b77826166fd565b80845260208401935083602082028501615b90856166de565b60005b84811015615bc9578383038852615bab838351615c5b565b9250615bb68261671e565b9150602088019750600181019050615b93565b508196508694505050505092915050565b615be3816167d1565b82525050565b615bf2816167e3565b82525050565b615c01816167f5565b82525050565b615c1081616761565b82525050565b615c1f81616807565b82525050565b6000615c3082616713565b808452615c44816020860160208601616828565b615c4d8161685b565b602085010191505092915050565b6000615c6682616708565b808452615c7a816020860160208601616828565b615c838161685b565b602085010191505092915050565b600081546001811660008114615cae5760018114615cce57615d0f565b607f600283041680865260ff198316602087015260408601935050615d0f565b60028204808652602086019550615ce4856166eb565b60005b82811015615d0657815481890152600182019150602081019050615ce7565b80880195505050505b505092915050565b6000600c82527f76656869636c655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f7072657061795f6d6f6e657900000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7072657061795f6c656e000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f57726f6e6720696e54696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600582527f696e6465780000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74797065000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f706c6174655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f696e5f74696d655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600b82527f696e5f7069635f686173680000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f62657274685f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461626c655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74696d65000000000000000000000000000000000000000000000000006020830152604082019050919050565b615fb48161676b565b82525050565b6000602082019050615fcf6000830184615b5d565b92915050565b6000602082019050615fea6000830184615bf8565b92915050565b60006020820190506160056000830184615c07565b92915050565b600061016082019050616021600083018e615c07565b61602e602083018d615b5d565b8181036040830152616040818c615c25565b905061604f606083018b615c07565b61605c608083018a615c07565b61606960a0830189615c07565b81810360c083015261607b8188615c25565b905061608a60e0830187615c07565b616098610100830186615c07565b6160a6610120830185615c07565b8181036101408301526160b98184615c25565b90509c9b505050505050505050505050565b60006040820190506160e06000830185615c07565b6160ed6020830184615c07565b9392505050565b60006080820190506161096000830187615c07565b6161166020830186615c07565b6161236040830185615c07565b81810360608301526161358184615b6c565b905095945050505050565b60006020820190506161556000830184615c16565b92915050565b600060208201905081810360008301526161758184615c25565b905092915050565b600060408201905081810360008301526161978185615c25565b90506161a66020830184615bda565b9392505050565b600060408201905081810360008301526161c78185615c25565b90506161d66020830184615c07565b9392505050565b60006101208201905081810360008301526161f8818c615c25565b9050616207602083018b615c07565b616214604083018a615c07565b6162216060830189615c07565b81810360808301526162338188615c25565b905061624260a0830187615c07565b61624f60c0830186615c07565b61625c60e0830185615c07565b81810361010083015261626f8184615c25565b90509a9950505050505050505050565b600060408201905081810360008301526162998185615c25565b905081810360208301526162ad8184615c25565b90509392505050565b600060408201905081810360008301526162d08185615c91565b90506162df6020830184615be9565b9392505050565b600060208201905081810360008301526162ff81615d17565b9050919050565b6000604082019050818103600083015261631f81615d17565b905061632e6020830184615c07565b92915050565b6000602082019050818103600083015261634d81615d4e565b9050919050565b6000604082019050818103600083015261636d81615d4e565b905061637c6020830184615c07565b92915050565b6000602082019050818103600083015261639b81615d85565b9050919050565b600060408201905081810360008301526163bb81615d85565b90506163ca6020830184615c07565b92915050565b600060208201905081810360008301526163e981615dbc565b9050919050565b6000604082019050818103600083015261640981615df3565b90506164186020830184615c07565b92915050565b6000604082019050818103600083015261643781615df3565b90506164466020830184615fab565b92915050565b6000602082019050818103600083015261646581615e2a565b9050919050565b6000604082019050818103600083015261648581615e2a565b90506164946020830184615c07565b92915050565b600060208201905081810360008301526164b381615e61565b9050919050565b600060408201905081810360008301526164d381615e61565b905081810360208301526164e78184615c25565b905092915050565b6000602082019050818103600083015261650881615e98565b9050919050565b6000604082019050818103600083015261652881615e98565b90506165376020830184615c07565b92915050565b6000602082019050818103600083015261655681615ecf565b9050919050565b6000604082019050818103600083015261657681615ecf565b9050818103602083015261658a8184615c25565b905092915050565b600060208201905081810360008301526165ab81615f06565b9050919050565b600060408201905081810360008301526165cb81615f06565b905081810360208301526165df8184615c25565b905092915050565b6000604082019050818103600083015261660081615f3d565b905081810360208301526166148184615c91565b905092915050565b6000602082019050818103600083015261663581615f74565b9050919050565b6000604082019050818103600083015261665581615f74565b90506166646020830184615c07565b92915050565b600060208201905061667f6000830184615fab565b92915050565b6000604051905081810181811067ffffffffffffffff821117156166a857600080fd5b8060405250919050565b600067ffffffffffffffff8211156166c957600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060058210151561675957fe5b819050919050565b6000819050919050565b6000819050919050565b60006167808261672b565b9050919050565b60006167928261672b565b9050919050565b60006167a48261672b565b9050919050565b60006167b68261672b565b9050919050565b6000819050919050565b6000819050919050565b60006167dc8261672b565b9050919050565b60006167ee8261672b565b9050919050565b60006168008261674b565b9050919050565b600061681282616761565b9050919050565b82818337600083830152505050565b60005b8381101561684657808201518184015260208101905061682b565b83811115616855576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820e350b52c1a91b9c77e44ba8ace45ab0c7f8e8a4f803a051c89b32a6788a5e2766c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","8015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a799190810190615822565b8773ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610acc90616405565b602060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b1e9190810190615822565b8873ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b71906162e6565b600060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610bc8919081019061597e565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60606000806000606060008060006060600080610ca160038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c965780601f10610c6b57610100808354040283529160200191610c96565b820191906000526020600020905b815481529060010190602001808311610c7957829003601f168201915b50505050508d612ecd565b915060008273ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d0957600080fd5b505af1158015610d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d419190810190615822565b1415610db5576000806000806000806020604051908101604052806000815250959493929190859550849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a5061144e565b8173ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e0b9190616140565b602060405180830381600087803b158015610e2557600080fd5b505af1158015610e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e5d91908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610eb290616453565b600060405180830381600087803b158015610ecc57600080fd5b505af1158015610ee0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610f09919081019061597e565b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f5c906164a8565b602060405180830381600087803b158015610f7657600080fd5b505af1158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fae9190810190615822565b8273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110019061654b565b602060405180830381600087803b15801561101b57600080fd5b505af115801561102f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110539190810190615822565b8373ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110a690616397565b602060405180830381600087803b1580156110c057600080fd5b505af11580156110d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110f89190810190615822565b8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161114b906164f6565b600060405180830381600087803b15801561116557600080fd5b505af1158015611179573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506111a2919081019061597e565b8573ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111f59061661c565b602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112479190810190615822565b8673ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161129a906165ce565b602060405180830381600087803b1580156112b457600080fd5b505af11580156112c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112ec9190810190615822565b8773ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161133f90616405565b602060405180830381600087803b15801561135957600080fd5b505af115801561136d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113919190810190615822565b8873ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113e4906162e6565b600060405180830381600087803b1580156113fe57600080fd5b505af1158015611412573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061143b919081019061597e565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b6060600080600060606000806000606060008061154a60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115095780601f106114de57610100808354040283529160200191611509565b820191906000526020600020905b8154815290600101906020018083116114ec57829003601f168201915b50505050506040805190810160405280600881526020017f706c6174655f69640000000000000000000000000000000000000000000000008152508e6130b5565b915060008273ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115b257600080fd5b505af11580156115c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115ea9190810190615822565b141561165e576000806000806000806020604051908101604052806000815250959493929190859550849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a50611cf7565b8173ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116b49190616140565b602060405180830381600087803b1580156116ce57600080fd5b505af11580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061170691908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161175b90616453565b600060405180830381600087803b15801561177557600080fd5b505af1158015611789573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506117b2919081019061597e565b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611805906164a8565b602060405180830381600087803b15801561181f57600080fd5b505af1158015611833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118579190810190615822565b8273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118aa9061654b565b602060405180830381600087803b1580156118c457600080fd5b505af11580156118d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118fc9190810190615822565b8373ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161194f90616397565b602060405180830381600087803b15801561196957600080fd5b505af115801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119a19190810190615822565b8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119f4906164f6565b600060405180830381600087803b158015611a0e57600080fd5b505af1158015611a22573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611a4b91908101","9061597e565b8573ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a9e9061661c565b602060405180830381600087803b158015611ab857600080fd5b505af1158015611acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611af09190810190615822565b8673ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b43906165ce565b602060405180830381600087803b158015611b5d57600080fd5b505af1158015611b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b959190810190615822565b8773ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611be890616405565b602060405180830381600087803b158015611c0257600080fd5b505af1158015611c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c3a9190810190615822565b8873ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c8d906162e6565b600060405180830381600087803b158015611ca757600080fd5b505af1158015611cbb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611ce4919081019061597e565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008060008a131515611d4e576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611d45906163e5565b60405180910390fd5b611df260038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611de75780601f10611dbc57610100808354040283529160200191611de7565b820191906000526020600020905b815481529060010190602001808311611dca57829003601f168201915b50505050508c612ecd565b9050600080541480611e9f575060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611e6557600080fd5b505af1158015611e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e9d9190810190615822565b145b15611ebc57611eb58b8b8b8b8b8b8b8b8b6132a0565b9150611ec1565b600491505b509998505050505050505050565b6000611fe360038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f6a5780601f10611f3f57610100808354040283529160200191611f6a565b820191906000526020600020905b815481529060010190602001808311611f4d57829003601f168201915b50505050506040805190810160405280600881526020017f706c6174655f6964000000000000000000000000000000000000000000000000815250866040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508787613ae6565b90509392505050565b60008060006060611ffb61562c565b60008a1215801561200c5750600089135b80156120185750601589125b80156120245750600088135b80156120305750600087135b801561203b57508688125b151561204657600080fd5b6120538689898d8d613e86565b905089898260000151836020015180905094509450945094505095509550955095915050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121445780601f1061211957610100808354040283529160200191612144565b820191906000526020600020905b81548152906001019060200180831161212757829003601f168201915b5050505050905090565b60008060006060600080606060008060008d1215801561216e575060008c135b801561217a575060158c125b8015612186575060008b135b8015612192575060008a135b801561219d5750898b125b15156121a857600080fd5b61228360038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122415780601f1061221657610100808354040283529160200191612241565b820191906000526020600020905b81548152906001019060200180831161222457829003601f168201915b50505050506040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508d8d613ecc565b945061236260038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561231e5780601f106122f35761010080835404028352916020019161231e565b820191906000526020600020905b81548152906001019060200180831161230157829003601f168201915b50505050508e8e6040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508f8f6141e1565b935060098473ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156123ca57600080fd5b505af11580156123de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124029190810190615822565b0260405190808252806020026020018201604052801561243657816020015b60608152602001906001900390816124215790505b509250600091505b8373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124a257600080fd5b505af11580156124b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124da9190810190615822565b821015612cc9578373ffffffffffffffffffffffffffffffffffffffff16633dd2b614836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125369190615ff0565b602060405180830381600087803b15801561255057600080fd5b505af1158015612564573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061258891908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125dd90616453565b600060405180830381600087803b1580156125f757600080fd5b505af115801561260b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612634919081019061597e565b836009840281518110151561264557fe5b906020019060200201819052506126ff8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126a8906164a8565b602060405180830381600087803b1580156126c257600080fd5b505af11580156126d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126fa9190810190615822565b6144e6565b836001600985020181518110151561271357fe5b906020019060200201819052506127cd8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127769061654b565b602060405180830381600087803b15801561279057600080fd5b505af11580156127a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127c89190810190615822565b6144e6565b83600260098502018151811015156127e157fe5b9060200190602002018190525061289b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161284490616397565b602060405180830381600087803b15801561285e57600080fd5b505af1158015612872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128969190810190615822565b6144e6565b83600360098502018151811015156128af57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161290f906164f6565b600060405180830381600087803b15801561292957600080fd5b505af115801561293d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612966919081019061597e565b836004600985020181518110151561297a57fe5b90602001906020020181905250612a348173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129dd9061661c565b602060405180830381600087803b1580156129f757600080fd5b505af1158015612a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a2f9190810190615822565b6144e6565b8360056009850201815181101515612a48","","","01602060405180830381600087803b158015614a6057600080fd5b505af1158015614a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614a989190810190615822565b821015615287578473ffffffffffffffffffffffffffffffffffffffff16633dd2b614836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614af49190615ff0565b602060405180830381600087803b158015614b0e57600080fd5b505af1158015614b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614b4691908101906157d0565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614b9b90616453565b600060405180830381600087803b158015614bb557600080fd5b505af1158015614bc9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614bf2919081019061597e565b8360098402815181101515614c0357fe5b90602001906020020181905250614cbd8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614c66906164a8565b602060405180830381600087803b158015614c8057600080fd5b505af1158015614c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614cb89190810190615822565b6144e6565b8360016009850201815181101515614cd157fe5b90602001906020020181905250614d8b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614d349061654b565b602060405180830381600087803b158015614d4e57600080fd5b505af1158015614d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614d869190810190615822565b6144e6565b8360026009850201815181101515614d9f57fe5b90602001906020020181905250614e598173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614e0290616397565b602060405180830381600087803b158015614e1c57600080fd5b505af1158015614e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614e549190810190615822565b6144e6565b8360036009850201815181101515614e6d57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614ecd906164f6565b600060405180830381600087803b158015614ee757600080fd5b505af1158015614efb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614f24919081019061597e565b8360046009850201815181101515614f3857fe5b90602001906020020181905250614ff28173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614f9b9061661c565b602060405180830381600087803b158015614fb557600080fd5b505af1158015614fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614fed9190810190615822565b6144e6565b836005600985020181518110151561500657fe5b906020019060200201819052506150c08173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615069906165ce565b602060405180830381600087803b15801561508357600080fd5b505af1158015615097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506150bb9190810190615822565b6144e6565b83600660098502018151811015156150d457fe5b9060200190602002018190525061518e8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161513790616405565b602060405180830381600087803b15801561515157600080fd5b505af1158015615165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506151899190810190615822565b6144e6565b83600760098502018151811015156151a257fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615202906162e6565b600060405180830381600087803b15801561521c57600080fd5b505af1158015615230573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250615259919081019061597e565b836008600985020181518110151561526d57fe5b9060200190602002018190525081806001019250506149fc565b829350505050919050565b6000611001905090565b6000806000806152ab8c614731565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561531157600080fd5b505af1158015615325573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615349919081019061577e565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db58c8c6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016153a292919061627f565b600060405180830381600087803b1580156153bc57600080fd5b505af11580156153d0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166340b5f1ab8a8a6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161542b9291906161ad565b600060405180830381600087803b15801561544557600080fd5b505af1158015615459573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631ee887918a896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016154b49291906161ad565b600060405180830381600087803b1580156154ce57600080fd5b505af11580156154e2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16633249273787876040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161553d9291906160cb565b600060405180830381600087803b15801561555757600080fd5b505af115801561556b573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59578d846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016155c692919061617d565b602060405180830381600087803b1580156155e057600080fd5b505af11580156155f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061561891908101906157a7565b905080935050505098975050505050505050565b604080519081016040528060008152602001606081525090565b60006156528251616775565b905092915050565b60006156668251616787565b905092915050565b600061567a8251616799565b905092915050565b600061568e82516167ab565b905092915050565b60006156a282356167bd565b905092915050565b60006156b682516167bd565b905092915050565b600082601f83011215156156d157600080fd5b81356156e46156df826166b2565b616685565b9150808252602083016020830185838301111561570057600080fd5b61570b838284616819565b50505092915050565b600082601f830112151561572757600080fd5b815161573a615735826166b2565b616685565b9150808252602083016020830185838301111561575657600080fd5b615761838284616828565b50505092915050565b600061577682356167c7565b905092915050565b60006020828403121561579057600080fd5b600061579e84828501615646565b91505092915050565b6000602082840312156157b957600080fd5b60006157c78482850161565a565b91505092915050565b6000602082840312156157e257600080fd5b60006157f08482850161566e565b91505092915050565b60006020828403121561580b57600080fd5b600061581984828501615682565b91505092915050565b60006020828403121561583457600080fd5b6000615842848285016156aa565b91505092915050565b6000806000806080858703121561586157600080fd5b600061586f87828801615696565b945050602061588087828801615696565b935050604061589187828801615696565b92505060606158a287828801615696565b91505092959194509250565b600080600080600060a086880312156158c657600080fd5b60006158d488828901615696565b95505060206158e588828901615696565b94505060406158f688828901615696565b935050606061590788828901615696565b925050608086013567ffffffffffffffff81111561592457600080fd5b615930888289016156be565b9150509295509295909350565b60006020828403121561594f57600080fd5b600082013567ffffffffffffffff81111561596957600080fd5b615975848285016156be565b91505092915050565b60006020828403121561599057600080fd5b600082015167ffffffffffffffff8111156159aa57600080fd5b6159b684828501615714565b91505092915050565b6000806000606084860312156159d457600080fd5b600084013567ffffffffffffffff8111156159ee57600080fd5b6159fa868287016156be565b9350506020615a0b86828701615696565b9250506040615a1c86828701615696565b9150509250925092565b60008060008060008060008060006101208a8c031215615a4557600080fd5b","60008a013567ffffffffffffffff811115615a5f57600080fd5b615a6b8c828d016156be565b9950506020615a7c8c828d01615696565b9850506040615a8d8c828d01615696565b9750506060615a9e8c828d01615696565b96505060808a013567ffffffffffffffff811115615abb57600080fd5b615ac78c828d016156be565b95505060a0615ad88c828d01615696565b94505060c0615ae98c828d01615696565b93505060e0615afa8c828d01615696565b9250506101008a013567ffffffffffffffff811115615b1857600080fd5b615b248c828d016156be565b9150509295985092959850929598565b600060208284031215615b4657600080fd5b6000615b548482850161576a565b91505092915050565b615b668161672b565b82525050565b6000615b77826166fd565b80845260208401935083602082028501615b90856166de565b60005b84811015615bc9578383038852615bab838351615c5b565b9250615bb68261671e565b9150602088019750600181019050615b93565b508196508694505050505092915050565b615be3816167d1565b82525050565b615bf2816167e3565b82525050565b615c01816167f5565b82525050565b615c1081616761565b82525050565b615c1f81616807565b82525050565b6000615c3082616713565b808452615c44816020860160208601616828565b615c4d8161685b565b602085010191505092915050565b6000615c6682616708565b808452615c7a816020860160208601616828565b615c838161685b565b602085010191505092915050565b600081546001811660008114615cae5760018114615cce57615d0f565b607f600283041680865260ff198316602087015260408601935050615d0f565b60028204808652602086019550615ce4856166eb565b60005b82811015615d0657815481890152600182019150602081019050615ce7565b80880195505050505b505092915050565b6000600b82527f696e5f7069635f686173680000000000000000000000000000000000000000006020830152604082019050919050565b6000600582527f696e6465780000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74797065000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f57726f6e6720696e54696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f76656869636c655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f62657274685f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74696d65000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f706c6174655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f696e5f74696d655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461626c655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f7072657061795f6d6f6e657900000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7072657061795f6c656e000000000000000000000000000000000000000000006020830152604082019050919050565b615fb48161676b565b82525050565b6000602082019050615fcf6000830184615b5d565b92915050565b6000602082019050615fea6000830184615bf8565b92915050565b60006020820190506160056000830184615c07565b92915050565b600061016082019050616021600083018e615c07565b61602e602083018d615b5d565b8181036040830152616040818c615c25565b905061604f606083018b615c07565b61605c608083018a615c07565b61606960a0830189615c07565b81810360c083015261607b8188615c25565b905061608a60e0830187615c07565b616098610100830186615c07565b6160a6610120830185615c07565b8181036101408301526160b98184615c25565b90509c9b505050505050505050505050565b60006040820190506160e06000830185615c07565b6160ed6020830184615c07565b9392505050565b60006080820190506161096000830187615c07565b6161166020830186615c07565b6161236040830185615c07565b81810360608301526161358184615b6c565b905095945050505050565b60006020820190506161556000830184615c16565b92915050565b600060208201905081810360008301526161758184615c25565b905092915050565b600060408201905081810360008301526161978185615c25565b90506161a66020830184615bda565b9392505050565b600060408201905081810360008301526161c78185615c25565b90506161d66020830184615c07565b9392505050565b60006101208201905081810360008301526161f8818c615c25565b9050616207602083018b615c07565b616214604083018a615c07565b6162216060830189615c07565b81810360808301526162338188615c25565b905061624260a0830187615c07565b61624f60c0830186615c07565b61625c60e0830185615c07565b81810361010083015261626f8184615c25565b90509a9950505050505050505050565b600060408201905081810360008301526162998185615c25565b905081810360208301526162ad8184615c25565b90509392505050565b600060408201905081810360008301526162d08185615c91565b90506162df6020830184615be9565b9392505050565b600060208201905081810360008301526162ff81615d17565b9050919050565b6000604082019050818103600083015261631f81615d17565b905081810360208301526163338184615c25565b905092915050565b6000604082019050818103600083015261635481615d4e565b90506163636020830184615c07565b92915050565b6000604082019050818103600083015261638281615d4e565b90506163916020830184615fab565b92915050565b600060208201905081810360008301526163b081615d85565b9050919050565b600060408201905081810360008301526163d081615d85565b90506163df6020830184615c07565b92915050565b600060208201905081810360008301526163fe81615dbc565b9050919050565b6000602082019050818103600083015261641e81615df3565b9050919050565b6000604082019050818103600083015261643e81615df3565b905061644d6020830184615c07565b92915050565b6000602082019050818103600083015261646c81615e2a565b9050919050565b6000604082019050818103600083015261648c81615e2a565b905081810360208301526164a08184615c25565b905092915050565b600060208201905081810360008301526164c181615e61565b9050919050565b600060408201905081810360008301526164e181615e61565b90506164f06020830184615c07565b92915050565b6000602082019050818103600083015261650f81615e98565b9050919050565b6000604082019050818103600083015261652f81615e98565b905081810360208301526165438184615c25565b905092915050565b6000602082019050818103600083015261656481615ecf565b9050919050565b6000604082019050818103600083015261658481615ecf565b90506165936020830184615c07565b92915050565b600060408201905081810360008301526165b281615f06565b905081810360208301526165c68184615c91565b905092915050565b600060208201905081810360008301526165e781615f3d565b9050919050565b6000604082019050818103600083015261660781615f3d565b90506166166020830184615c07565b92915050565b6000602082019050818103600083015261663581615f74565b9050919050565b6000604082019050818103600083015261665581615f74565b90506166646020830184615c07565b92915050565b600060208201905061667f6000830184615fab565b92915050565b6000604051905081810181811067ffffffffffffffff821117156166a857600080fd5b8060405250919050565b600067ffffffffffffffff8211156166c957600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060058210151561675957fe5b819050919050565b6000819050919050565b6000819050919050565b60006167808261672b565b9050919050565b60006167928261672b565b9050919050565b60006167a48261672b565b9050919050565b60006167b68261672b565b9050919050565b6000819050919050565b6000819050919050565b60006167dc8261672b565b9050919050565b60006167ee8261672b565b9050919050565b60006168008261674b565b9050919050565b600061681282616761565b9050919050565b82818337600083830152505050565b60005b8381101561684657808201518184015260208101905061682b565b83811115616855576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058202a1a81a309229bd5b06eb41a450a62c13d4242a34c542723384b8add99f167de6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"},{\"name\":\"inTime\",\"type\":\"int256\"},{\"name\":\"inTimeType\",\"type\":\"int256\"},{\"name\":\"inType\",\"type\":\"int256\"},{\"name\":\"plateId\",\"type\":\"string\"},{\"name\":\"prepayLen\",\"type\":\"int256\"},{\"name\":\"prepayMoney\",\"type\":\"int256\"},{\"name\":\"vehicleType\",\"type\":\"int256\"},{\"name\":\"inPicHash\",\"type\":\"string\"}],\"name\":\"insertRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mIndex\",\"type\":\"uint256\"}],\"name\":\"getByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"int256\"},{\"name\":\"size\",\"type\":\"int256\"},{\"name\":\"start\",\"type\":\"int256\"},{\"name\":\"end\",\"type\":\"int256\"},{\"name\":\"plateId\",\"type\":\"string\"}],\"name\":\"getRecordByPlateId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLoc\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"plateId\",\"type\":\"string\"},{\"name\":\"start\",\"type\":\"int256\"},{\"name\":\"end\",\"type\":\"int256\"}],\"name\":\"getRecordCountByPlateId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"int256\"},{\"name\":\"size\",\"type\":\"int256\"},{\"name\":\"start\",\"type\":\"int256\"},{\"name\":\"end\",\"type\":\"int256\"}],\"name\":\"getRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"}],\"name\":\"getById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"plateId\",\"type\":\"string\"}],\"name\":\"getByPlateId\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"loc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"berthId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"inTime\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"inTimeType\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"inType\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"plateId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"prepayLen\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"prepayMoney\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"vehicleType\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"inPicHash\",\"type\":\"string\"}],\"name\":\"InsertInRecordEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_INSERTRECORD = "insertRecord";

    public static final String FUNC_GETBYINDEX = "getByIndex";

    public static final String FUNC_GETRECORDBYPLATEID = "getRecordByPlateId";

    public static final String FUNC_GETINDEX = "getIndex";

    public static final String FUNC_GETLOC = "getLoc";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETRECORDCOUNTBYPLATEID = "getRecordCountByPlateId";

    public static final String FUNC_GETRECORD = "getRecord";

    public static final String FUNC_GETBYID = "getById";

    public static final String FUNC_GETBYPLATEID = "getByPlateId";

    public static final Event INSERTINRECORDEVENT_EVENT = new Event("InsertInRecordEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected TstInV7(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt insertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new Utf8String(berthId),
                new Int256(inTime),
                new Int256(inTimeType),
                new Int256(inType),
                new Utf8String(plateId),
                new Int256(prepayLen),
                new Int256(prepayMoney),
                new Int256(vehicleType),
                new Utf8String(inPicHash)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new Utf8String(berthId),
                new Int256(inTime),
                new Int256(inTimeType),
                new Int256(inType),
                new Utf8String(plateId),
                new Int256(prepayLen),
                new Int256(prepayMoney),
                new Int256(vehicleType),
                new Utf8String(inPicHash)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new Utf8String(berthId),
                new Int256(inTime),
                new Int256(inTimeType),
                new Int256(inType),
                new Utf8String(plateId),
                new Int256(prepayLen),
                new Int256(prepayMoney),
                new Int256(vehicleType),
                new Utf8String(inPicHash)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getInsertRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt getByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new Uint256(mIndex)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getByIndex(BigInteger mIndex, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new Uint256(mIndex)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new Uint256(mIndex)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getGetByIndexInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIndexOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public TransactionReceipt getRecordByPlateId(BigInteger offset, BigInteger size, BigInteger start, BigInteger end, String plateId) {
        final Function function = new Function(
                FUNC_GETRECORDBYPLATEID, 
                Arrays.<Type>asList(new Int256(offset),
                new Int256(size),
                new Int256(start),
                new Int256(end),
                new Utf8String(plateId)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getRecordByPlateId(BigInteger offset, BigInteger size, BigInteger start, BigInteger end, String plateId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETRECORDBYPLATEID, 
                Arrays.<Type>asList(new Int256(offset),
                new Int256(size),
                new Int256(start),
                new Int256(end),
                new Utf8String(plateId)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetRecordByPlateId(BigInteger offset, BigInteger size, BigInteger start, BigInteger end, String plateId) {
        final Function function = new Function(
                FUNC_GETRECORDBYPLATEID, 
                Arrays.<Type>asList(new Int256(offset),
                new Int256(size),
                new Int256(start),
                new Int256(end),
                new Utf8String(plateId)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple5<BigInteger, BigInteger, BigInteger, BigInteger, String> getGetRecordByPlateIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETRECORDBYPLATEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<BigInteger, BigInteger, BigInteger, BigInteger, String>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue()
                );
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, List<String>> getGetRecordByPlateIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETRECORDBYPLATEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, List<String>>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                convertToNative((List<Utf8String>) results.get(3).getValue())
                );
    }

    public BigInteger getIndex() throws ContractException {
        final Function function = new Function(FUNC_GETINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getLoc() throws ContractException {
        final Function function = new Function(FUNC_GETLOC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getOwner() throws ContractException {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt getRecordCountByPlateId(String plateId, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORDCOUNTBYPLATEID, 
                Arrays.<Type>asList(new Utf8String(plateId),
                new Int256(start),
                new Int256(end)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getRecordCountByPlateId(String plateId, BigInteger start, BigInteger end, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETRECORDCOUNTBYPLATEID, 
                Arrays.<Type>asList(new Utf8String(plateId),
                new Int256(start),
                new Int256(end)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetRecordCountByPlateId(String plateId, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORDCOUNTBYPLATEID, 
                Arrays.<Type>asList(new Utf8String(plateId),
                new Int256(start),
                new Int256(end)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, BigInteger, BigInteger> getGetRecordCountByPlateIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETRECORDCOUNTBYPLATEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, BigInteger, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getGetRecordCountByPlateIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETRECORDCOUNTBYPLATEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt getRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new Int256(offset),
                new Int256(size),
                new Int256(start),
                new Int256(end)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new Int256(offset),
                new Int256(size),
                new Int256(start),
                new Int256(end)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new Int256(offset),
                new Int256(size),
                new Int256(start),
                new Int256(end)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, BigInteger> getGetRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue()
                );
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, List<String>> getGetRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, List<String>>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                convertToNative((List<Utf8String>) results.get(3).getValue())
                );
    }

    public TransactionReceipt getById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new Utf8String(berthId)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getById(String berthId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new Utf8String(berthId)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new Utf8String(berthId)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetByIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public TransactionReceipt getByPlateId(String plateId) {
        final Function function = new Function(
                FUNC_GETBYPLATEID, 
                Arrays.<Type>asList(new Utf8String(plateId)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getByPlateId(String plateId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYPLATEID, 
                Arrays.<Type>asList(new Utf8String(plateId)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetByPlateId(String plateId) {
        final Function function = new Function(
                FUNC_GETBYPLATEID, 
                Arrays.<Type>asList(new Utf8String(plateId)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetByPlateIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYPLATEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByPlateIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYPLATEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public List<InsertInRecordEventEventResponse> getInsertInRecordEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTINRECORDEVENT_EVENT, transactionReceipt);
        ArrayList<InsertInRecordEventEventResponse> responses = new ArrayList<InsertInRecordEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertInRecordEventEventResponse typedResponse = new InsertInRecordEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.berthId = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.inTime = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.inTimeType = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.inType = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.plateId = (String) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.prepayLen = (BigInteger) eventValues.getNonIndexedValues().get(7).getValue();
            typedResponse.prepayMoney = (BigInteger) eventValues.getNonIndexedValues().get(8).getValue();
            typedResponse.vehicleType = (BigInteger) eventValues.getNonIndexedValues().get(9).getValue();
            typedResponse.inPicHash = (String) eventValues.getNonIndexedValues().get(10).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertInRecordEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTINRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertInRecordEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTINRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static TstInV7 load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new TstInV7(contractAddress, client, credential);
    }

    public static TstInV7 deploy(Client client, CryptoKeyPair credential, String loc) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Utf8String(loc)));
        return deploy(TstInV7.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class InsertInRecordEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret;

        public String account;

        public String berthId;

        public BigInteger inTime;

        public BigInteger inTimeType;

        public BigInteger inType;

        public String plateId;

        public BigInteger prepayLen;

        public BigInteger prepayMoney;

        public BigInteger vehicleType;

        public String inPicHash;
    }
}
